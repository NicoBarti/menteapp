const { environment } = require('@rails/webpacker')

const webpack = require('webpack')
environment.plugins.append(
  'Provide',
  new webpack.ProvidePlugin({
    $: 'jquery',
    jQuery: 'jquery',

    // esta opcion es para que funcione waypoint.jquery
    'window.jQuery': 'jquery',

    Popper: ['popper.js', 'default']
  })
)

const IconfontPlugin = require('iconfont-plugin-webpack')

environment.plugins.append(
  // https://www.npmjs.com/package/iconfont-plugin-webpack
  'Iconfont', new IconfontPlugin({
    src: './app/javascript/images/icons',
    family: 'icons',
    dest: {
      font: './tmp/webpack/generated/fonts/icon_font/[family].[type]',
      css: './tmp/webpack/generated/_icon_font_[family].scss'
    },
    watch: {
      pattern: 'app/javascript/images/icons/*',
      cwd: undefined
    },
  })
)

// unfortunately, we need to adjust the sass-loader and add an additional `resolve-url-loader`, otherwise
// the relative url(./fonts/...) entries generated by the IconfontPlugin will not work
const sassLoaderConfig = environment.loaders.get('sass')
const sassLoaderIndex = sassLoaderConfig.use.findIndex(config => { return config.loader === 'sass-loader' })
sassLoaderConfig.use[sassLoaderIndex].options.includePaths = ['tmp/webpack']
sassLoaderConfig.use.splice(sassLoaderIndex, 0, {
  loader: 'resolve-url-loader',
})




module.exports = environment
